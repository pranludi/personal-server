plugins {
    id "java"
    id "org.springframework.boot" version "3.4.2"
    id "io.spring.dependency-management" version "1.1.7"
    id "io.sentry.jvm.gradle" version "5.1.0"
}

ext {
    protobufVersion = "4.29.3"
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

dependencies {
    implementation project(":domain-entities")
    implementation project(":server-protocol")
    implementation project(":game-data")

    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-starter-aop"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "org.springframework.boot:spring-boot-starter-data-redis"
    implementation "org.springframework.boot:spring-boot-starter-jdbc"
    implementation "org.springframework.boot:spring-boot-starter-webflux"
    implementation "org.springframework.boot:spring-boot-starter-undertow"
    implementation("org.springframework.boot:spring-boot-starter-web") {
        exclude group: "org.springframework.boot", module: "spring-boot-starter-tomcat"
    }
    implementation "org.apache.commons:commons-math3:3.6.1" // ??
    implementation "org.apache.commons:commons-lang3:3.10" // ??
    implementation "org.apache.httpcomponents:httpclient:4.5.12"
    runtimeOnly "org.postgresql:postgresql:42.7.3"
    // querydsl
    implementation "com.querydsl:querydsl-jpa:5.0.0:jakarta"
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
    // map struct
    implementation "org.mapstruct:mapstruct:1.6.3"
    annotationProcessor "org.mapstruct:mapstruct-processor:1.4.2.Final"
    implementation "no.entur.mapstruct.spi:protobuf-spi-impl:1.46"
    implementation group: 'com.google.protobuf', name: 'protobuf-java', version: protobufVersion

    runtimeOnly "org.springframework.boot:spring-boot-devtools"

    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.springframework.restdocs:spring-restdocs-mockmvc"
    testImplementation "io.projectreactor:reactor-test"
    testImplementation "junit:junit:4.13.1"
//    testImplementation(platform("org.junit:junit-bom:5.10.0"))
//    testImplementation("org.junit.jupiter:junit-jupiter")
    // testRuntimeOnly "org.junit.platform:junit-platform-launcher"
}

// QueryDSL Build Options
def querydslDir = layout.buildDirectory.dir("generated/querydsl").get().asFile
sourceSets {
    main.java.srcDirs += [querydslDir]
}

tasks.withType(JavaCompile).configureEach {
    options.getGeneratedSourceOutputDirectory().set(file(querydslDir))
}

//clean.doLast {
//    file(querydslDir).deleteDir()
//}

//clean {
//    delete file('src/main/generated')
//}

tasks.jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

/*
tasks.test {
    useJUnitPlatform()
}*/
